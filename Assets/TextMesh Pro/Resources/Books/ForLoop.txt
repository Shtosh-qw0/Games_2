	<b><size=50><size=63>ц</size>икл for</size></b>

    <size=45>В этом разделе мы изучим цикл <b><color=#871f93>for</color></b>.</size>

	<b><size=50>Сокращенная запись арифметических операций</size></b>

    <size=45>При написании программ часто требуется прибавить что-либо к текущему значению переменной. Например, при написании циклов while мы на каждом шаге прибавляли к счетчику единицу. Если название переменной длинное, то писать его несколько раз в одном арифметическом выражении неэкономно и неудобно. <size=60>ч</size>тобы избежать этого, была придумана сокращенная запись арифметических операций.</size>

    <size=45>Например, мы хотим прибавить к переменной x единицу. Mы уже умеем записывать это как <b>x = x + 1</b>. Tо же самое можно написать в сокращенной записи как <b>x += 1</b>. 3нак <b>+=</b> <b>означает, что к значению переменной, которая находится слева, будет прибавлен результат вычисления арифметического выражения, который находится справа</b>. По аналогии с <b>+=</b> существуют операции <b>-=</b>, <b>*=</b>, <b>/=</b>. Они определены и для целых, и для вещественных чисел. Для целых чисел также определена операция <b>%=</b> для подсчета остатка.</size>

    <size=45>Поскольку задача прибавить или вычесть единицу возникает очень часто, то для ее записи существует еще более короткая форма:</size>
    <size=45>-<size=60>ч</size>тобы <b>увеличить</b> значение переменной <b><color=#297499>x</color></b> на единицу, можно написать <b><color=#297499>x++</color></b>.</size> 
    <size=45>   -Если же мы хотим <b>вычесть</b> единицу, то писать нужно <b><color=#297499>x−−</color></b>. Именно в честь этой операции язык называется C++.</size>

	<b><size=50><size=63>ц</size>икл for</size></b>

    <size=45>В языке C++ <b><color=#871f93>for</color></b> является более короткой записью цикла <b><color=#871f93>while</color></b>, которую удобно применять в некоторых случаях. Допустим, нам нужно вывести все числа от <b>1 до 100</b>. Это несложно сделать с помощью цикла <b><color=#871f93>while</color></b>:</size>

	   <size=45><color=#053ad1>int</color>  <color=#297499>i</color>;
	<color=#297499>i</color>  =  1;
	<color=#871f93>while</color>  (<color=#297499>i</color>  <=  100) 
	{
	    cout  <<  <color=#297499>i</color>  <<  <color=#dd3f37>"  "</color>;
	    <color=#297499>i</color>++;
	}</size>

    <size=45>Однако намного проще сделать это с помощью цикла <b><color=#871f93>for</color></b>:</size>

	   <size=45><color=#053ad1>int</color>  <color=#297499>i</color>;
	<color=#871f93>for</color>  ( <color=#297499>i</color>  =  1;  <color=#297499>i</color>  <=  100;  <color=#297499>i</color>++) 
	{</color>
	    cout  <<  <color=#297499>i</color>  <<  <color=#dd3f37>"  "</color>;
	}</size>

    <size=45>После слова <b><color=#871f93>for</color></b> в скобках пишутся три выражения:</size>

   <size=45>1. Начальное значение счетчика (то, что выполняется непосредственно перед <b><color=#871f93>while</color></b>).</size>
        <size=45>2. <size=55>у</size>словие, при истинности которого выполняется цикл (абсолютно то же самое, что и в цикле <b><color=#871f93>while</color></b>).</size>
     <size=45>3. Изменение счетчика (то, что делается самой последней операцией в цикле <b><color=#871f93>while</color></b>).</size>

    <size=45>Выражения разделяются точкой с запятой. В принципе, в качестве выражений может выступать что угодно: первое из них выполнится один раз до начала цикла, второе будет проверяться на каждом шаге, а третье — выполняться каждый раз после того, как выполнены все действия в теле цикла.</size>

