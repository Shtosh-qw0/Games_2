	<b><size=50>Первая программа</size></b>

    <size=45>Перед вами чистый лист. Ниже приведен исходный код программы, которая не делает ничего:</size>
    
    	   <size=45><color=#191970>#include <<color=#dd3f37>iostream</color>>

    	<color=#053ad1>using  namespace</color>  std;

    	</color>int</color>  <color=#cc7b44>main</color>() 
	{
    	    <color=grey>// это комментарий, здесь можно писать пояснения</color>
	    <color=#053ad1>return</color> 0;
    	}</size>

    <size=45>Не углубляясь в подробности, посмотрим, из чего состоит программа. В первой строке написана команда <b>#include <<color=#dd3f37>iostream</color>></b>. Команда <b>#include</b> означает, что мы хотим обратиться к библиотеке, содержащей разные функции и разные полезные вещи. После <b>#include</b> в треугольных скобках (знаках «<» и «>») идет название библиотеки, в нашем случае — <b><color=#dd3f37>iostream</color></b>. Оно расшифровывается как «input/output stream», то есть «потоки ввода и вывода». С помощью этой библиотеки наша программа сможет общаться с внешним миром.</size>
    
    <size=45>Следующая строка, <b><color=#053ad1>using namespace</color> std</b>, говорит, что программа использует стандартное пространство имен (оно называется <b>std</b>). Если не подключать пространство имен <b>std</b>, то ломаться ничего не будет, но тогда для вызова стандартной функции придется писать много лишних букв.</size>

    <size=45>Дальше идет <b><color=#053ad1>int</color> <color=#cc7b44>main</color>()</b>. Это основная функция нашей программы, она будет запускаться автоматически. Первое слово <b><color=#053ad1>int</color></b> означает, что функция будет возвращать число. В нормальной ситуации это будет <b>0</b>: другое число возвращается автоматически, если в программе что-то сломалось. Например, если она произвела деление на ноль.</size>

    <size=45>Следующее слово, <b><color=#cc7b44>main</color></b>, зарезервировано для основной функции. Пустые скобки означают, что она не принимает параметров от операционной системы. После круглых скобок стоит открывающая фигурная скобка — это начало блока команд, которые относятся к функции <b><color=#cc7b44>main</color></b>.</size>

    <size=45>Следующая строка содержит комментарий. Он начинается с двух знаков <b>«/»</b>, после которых до конца строки можно писать пояснения к программе. На этом месте мы будем писать осмысленную программу, вместо комментария.</size>

    <size=45>Предпоследняя строка содержит <b><color=#053ad1>return</color> 0;</b> — команду завершения работы с кодом <b>0</b>. Это значит, что программа сделала все нужные действия и успешно завершилась.</size>

    <size=45>В последней строке содержится только закрывающая фигурная скобка — это окончание блока команд функции <b><color=#cc7b44>main</color></b>.</size>



	<b><size=50>Hello, world!</size></b>

    <size=45>Tеперь напишем программу, которая будет здороваться с миром:</size>

    	   <size=45>#include <<color=#dd3f37>iostream</color>>

    	<color=#053ad1>using  namespace</color>  std;

    	<color=#053ad1>int</color>  <color=#cc7b44>main</color>() 
	{
	    cout  <<  <color=#dd3f37>"Hello, World!"</color>;
	    <color=#053ad1>return</color> 0;
    	}</size>

    <size=45>Появилась новая строка: <b>cout << <color=#dd3f37>"Hello, World!"</color></b>. Она выводит на экран текст <b><color=#dd3f37>«Hello, World!»</color></b>. Разберем ее подробнее.</size>

    <size=45><b>cout</b> – это поток вывода, который расшифровывается как «console output», то есть <b>«вывод на экран»</b>. Если мы хотим показать на экране какой-нибудь текст, то должны поместить его в этот поток. Операция <b>«<<»</b> как раз и означает <b>«поместить»</b>. Она похожа на стрелку, это мнемоническое правило легко запомнить. Наконец, следом идет текст в кавычках — тот, который выводится на экран. Не забывайте ставить точку с запятой там, где она есть в примерах кода.</size>

