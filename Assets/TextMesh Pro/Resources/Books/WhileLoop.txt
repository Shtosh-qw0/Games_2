	<b><size=50><size=63>ц</size>икл while</size></b>

    <size=45><b>«While»</b> переводится как <b>«пока»</b> и в программировании означает <b>«пока условие верно, нужно выполнять следующие действия»</b>. В жизни цикл <b>«пока»</b> встречается очень часто. Например, вам срочно понадобились фиолетовые кроссовки для вечеринки. Как описать ваши действия для их получения? <b>«Пока не найдешь фиолетовые кроссовки – ходи по магазинам. Как только найдешь – покупай»</b>. <color=#871f93><b>While</b></color> очень похож на <b><color=#871f93>if</color></b>, но если <b><color=#871f93>if</color></b> выполняет действия один раз, то <color=#871f93><b>while</b></color> будет делать их до тех пор, пока выполнено условие.</size>

    <size=45>Рассмотрим этот цикл на примере. Есть число <b>N</b>. Необходимо вывести все числа по возрастанию от <b>1 до N</b>.</size>

    <size=45><b>Решение:</b></size>

    <size=45>Нужно завести счeтчик (переменную <b>i</b>), который будет равен текущему числу. Вначале это единица. Пока значение счетчика не превысит <b>N</b>, необходимо выводить его текущее значение и каждый раз увеличить его на единицу. В виде программы это записывается так:</size>

    	<size=45><color=#053ad1>int</color>  <color=#297499>i</color>,  <color=#297499>n</color>;
    	cin  >>  <color=#297499>n</color>;
    	<color=#297499>i</color>  =  1;

    	<color=#871f93>while</color>  (<color=#297499>i</color>  <=  <color=#297499>n</color>) 
	{
    	    cout  <<  <color=#297499>i</color>  <<  <color=#dd3f37>"  "</color>;
    	    <color=#297499>i</color>  =  <color=#297499>i</color>  +  1;
    	}</size>

    <size=45>Когда выполнение программы доходит до закрывающей фигурной скобки, то происходит возврат к строке с <b><color=#871f93>while</color></b> и проверка условия. Если оно верно, то блок команд выполняется ещe раз, а если нет, исполнение программы продолжается для команд, находящихся после блока команд <b><color=#871f93>while</color></b>.</size>

    <size=45>Рассмотрим ещe один пример. Например, компания друзей хочет купить пиццу. <size=60>ч</size>тобы не платить за доставку, нужно послать кого-нибудь в пиццерию. Кого? Самого младшего! Более формальная постановка задачи такая: среди последовательности чисел нужно найти и вывести минимальное. Последовательность состоит из положительных чисел и оканчивается нулeм.</size>

    <size=45>Первое решение, которое приходит в голову:</size>

    <size=45>Каждый раз когда нам называют число, мы сравнивает его с тем минимумом, который встречался раньше, и, если новое число еще меньше, то запоминает его. Tакие действия нужно продолжать пока числа в последовательности не закончатся. Вначале нам нужно запомнить самое первое названное число. В конце — назвать последнее, которое запомнил.</size>

    	<size=45><color=#053ad1>int</color>  <color=#297499>min</color>,  <color=#297499>now</color>;
    	cin  >>  <color=#297499>now</color>;
    	<color=#297499>min</color>  =  <color=#297499>now</color>;

    	<color=#871f93>while</color>  (<color=#297499>now</color>  !=  0) 
	{
    	    <color=#871f93>if</color>  (<color=#297499>now</color>  <  <color=#297499>min</color>) 
	    {
    	        <color=#297499>min</color>  =  <color=#297499>now</color>;
    	    }
    	    cin  >>  <color=#297499>now</color>;
    	}
    	cout  <<  <color=#297499>min</color>;</size>

	<b><size=50>Подсчет суммы последовательности чисел</size></b>

    <size=45>Решим еще одну задачу: те же друзья, которые покупали пиццу, решили посчитать, хватит ли у них денег? Каждый говорит, сколько у него есть, и нужно посчитать, сколько их в сумме. Последовательность состоит из положительных чисел и оканчивается нулем, нужно вывести сумму всех элементов в последовательности.</size>

    <size=45>Эта задача также очень легко решается человеком: достаточно помнить сумму уже названных чисел и каждое следующее число просто прибавлять к этой сумме. Сначала нужно запомнить ноль (числа еще не заданы). Программа будет выглядеть так:</size>

    	<size=45><color=#053ad1>int</color>  <color=#297499>sum</color>  =  0,  <color=#297499>now</color>;
   	cin  >>  <color=#297499>now</color>;

   	<color=#871f93>while</color>  (<color=#297499>now</color>  !=  0) 
	{
   	    <color=#297499>sum</color>  =  <color=#297499>sum</color>  +  <color=#297499>now</color>;
   	    cin  >>  <color=#297499>now</color>;
   	}
   	cout  <<  <color=#297499>sum</color>;</size>

